@page "/"
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveWebAssemblyRenderMode(false))


<h3>Lobby</h3>

@if (currentRoom is null)
{
    <input @bind="playerName" placeholder="Your name" />
    <input @bind="currentRoomName" placeholder="Room name" />
    <button @onclick="CreateRoom">Create</button>

    <h3>Rooms: </h3>
    <ul>
        @foreach (var room in rooms)
        {
            <li>@room.RoomName <button @onclick="()=> JoinRoom(room.RoomId)">Join</button></li>
        }
    </ul>
}
else
{
    <CascadingValue Value="hubConnection">
        <Room CurrentRoom="currentRoom" MyPlayerId="@myPlayerId" />
    </CascadingValue>
}


<h2>Chat: </h2>
<input type="text" @bind="message" />
<button @onclick="SendChatMessage">Send</button>
<ul>
    @foreach (var message in Messages)
    {
        <li>
            <p>
                @message.SenderName
            </p>
            <p>
                @message.MessageContent
            </p>
        </li>
    }
</ul>


@code {
    private HubConnection? hubConnection;
    public string? myPlayerId;
    private string playerName = string.Empty;
    private string message = string.Empty;
    private string currentRoomName = string.Empty;
    private GameRoom? currentRoom;
    private List<GameRoom> rooms = new();
    private List<ChatMessage> Messages = new();
    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/gamehub"))
            .Build();

        hubConnection.On<List<GameRoom>>(ConnectionStrings.Rooms, roomList =>
        {
            Console.WriteLine($"Got rooms. Count = {roomList.Count()}");
            rooms = roomList;
            StateHasChanged();
        });
        hubConnection.On<ChatMessage>(ConnectionStrings.ReceiveMessage, message =>
        {
            Console.WriteLine(message.SenderName + " " + message.MessageContent);
            Messages.Add(message);
            StateHasChanged();
        });


        await hubConnection.StartAsync();
        myPlayerId = hubConnection.ConnectionId;
    }

    private async Task CreateRoom()
    {
        if (hubConnection is null)
        {
            return;
        }
        currentRoom = await hubConnection.InvokeAsync<GameRoom>("CreateRoom", currentRoomName, playerName);
    }

    private async Task JoinRoom(string roomId)
    {
        if (hubConnection is null)
        {
            return;
        }

        var joinedRoom = await hubConnection.InvokeAsync<GameRoom>("JoinRoom", roomId, playerName);

        if (joinedRoom is not null)
        {
            currentRoom = joinedRoom;
        }
        else
        {
            Console.WriteLine("Room is full or does not exist");
        }
    }
    private async Task SendChatMessage()
    {
        if (hubConnection is null || playerName == string.Empty || message == string.Empty)
        {
            return;
        }

        await hubConnection.InvokeAsync("MessageSender", myPlayerId, playerName, message);
    }

}
